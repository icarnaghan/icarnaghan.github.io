<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Errors on Ian Carnaghan</title>
    <link>http://localhost:1313/tags/errors/</link>
    <description>Recent content in Errors on Ian Carnaghan</description>
    <image>
      <title>Ian Carnaghan</title>
      <url>http://localhost:1313/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>http://localhost:1313/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.145.0</generator>
    <language>en</language>
    <lastBuildDate>Thu, 02 Feb 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/errors/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Fix No space left on device error while reading upstream in Nginx</title>
      <link>http://localhost:1313/fix-no-space-left-on-device-error-while-reading-upstream-in-nginx/</link>
      <pubDate>Thu, 02 Feb 2017 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/fix-no-space-left-on-device-error-while-reading-upstream-in-nginx/</guid>
      <description>&lt;p&gt;Nginx is one of the world&amp;rsquo;s most powerful web servers. It has a robust caching system which eliminates the need for optimizing websites with third-party caching solutions.&lt;/p&gt;
&lt;p&gt;While managing your website, you may come across the strange error called No Space Left on Device while reading upstream.&lt;/p&gt;
&lt;p&gt;You won&amp;rsquo;t know that Nginx is throwing the &amp;ldquo;No Space Left error&amp;rdquo; until you check the HTTP response header or go through the log files. To see the response header, install the Redirect Path Chrome extension or use the online redirect checker tool.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Fixing WordPress HTTP error on media or image upload</title>
      <link>http://localhost:1313/fixing-wordpress-http-error-on-media-or-image-upload/</link>
      <pubDate>Mon, 24 Oct 2016 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/fixing-wordpress-http-error-on-media-or-image-upload/</guid>
      <description>&lt;p&gt;Today, I have addressed one major issue the WordPress users face i.e. HTTP error on uploading media or image files. I encountered this error yesterday while trying to upload a picture in my latest blog post. The picture uploader tool was repeatedly throwing cannot upload error.&lt;/p&gt;
&lt;p&gt;I logged into the server and checked PHP error log files generated by the website and PHP web server. The files were clean. I checked WP memory limit in the wp-config.php file. The memory allocated to my site was 64 megabytes and all my sites were using 15% of the allocated system memory. Hence, I ruled out the low memory issue.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Analyzing Nginx and Apache access log and error log files</title>
      <link>http://localhost:1313/analyzing-nginx-and-apache-access-log-and-error-log-files/</link>
      <pubDate>Tue, 06 Sep 2016 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/analyzing-nginx-and-apache-access-log-and-error-log-files/</guid>
      <description>&lt;p&gt;A log file generated by a web/database server is one of the most important files. It contains useful information on visitors, errors, warnings, etc. Some people think log files as server resource killer. Hence, they disable them in Apache, DB or NGINX configuration file. One more reason why people disable or ignore server logs is because the content of logs is difficult to understand. Hence, most noob webmasters use a log file analyzer program to check server logs.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Fix 404 not found wp-admin or wp-login PHP error in WordPress</title>
      <link>http://localhost:1313/fix-404-not-found-wp-admin-or-wp-login-php-error-in-wordpress/</link>
      <pubDate>Mon, 25 Jul 2016 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/fix-404-not-found-wp-admin-or-wp-login-php-error-in-wordpress/</guid>
      <description>&lt;p&gt;On a bad day, you may face difficulties in logging into the WP dashboard or opening the login page. These two problems can be easily fixed if you know the HTTP status code or error message shown by the browser when you access the twp pages.&lt;/p&gt;
&lt;p&gt;Today, we will help you out in fixing the 404 not found error message displayed by the web browser when you try to open wp-login or wp-admin PHP files. Earlier, we had shared a tutorial on fixing error establishing a database connection.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to fix 403 forbidden error in Nginx?</title>
      <link>http://localhost:1313/how-to-fix-403-forbidden-error-in-nginx/</link>
      <pubDate>Thu, 14 Jul 2016 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/how-to-fix-403-forbidden-error-in-nginx/</guid>
      <description>&lt;p&gt;403 access forbidden error message is displayed on the browser when you try to open a file whose public access has been blocked by the webmaster or because of a permission problem. In other words, the web server is saying that you are not allowed to view the file.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re a webmaster (blogger) and if you&amp;rsquo;re facing this issue, then it &amp;rsquo;s obvious that you don&amp;rsquo;t have much experience in web server configuration and management. There&amp;rsquo;s nothing to be ashamed of. Let&amp;rsquo;s understand these two issues in detail.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The OOM Killer : How to Fix Out of Memory Error in Linux?</title>
      <link>http://localhost:1313/the-oom-killer-how-to-fix-out-of-memory-error-in-linux/</link>
      <pubDate>Wed, 25 May 2016 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/the-oom-killer-how-to-fix-out-of-memory-error-in-linux/</guid>
      <description>&lt;p&gt;Since two weeks, my website was frequently crashing because the MySQL server stopped abruptly at random times of the day.&lt;/p&gt;
&lt;p&gt;This issue started when I was on a holiday. My site was down for several hours. I configured crontab to start MySQL server when the service had stopped. This didn&amp;rsquo;t help.&lt;/p&gt;
&lt;p&gt;I enabled query cache to reduce the load on the server. I use NGINX Fast CGI cache, APCu, and OpCache for my sites. Thus, I didn&amp;rsquo;t felt the need to install a caching plugin for my WordPress blog.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
